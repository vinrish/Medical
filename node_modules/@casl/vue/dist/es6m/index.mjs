import n from"vue";var t=n.extend({name:"Can",functional:true,props:{I:String,do:String,a:[String,Function],an:[String,Function],this:[String,Function,Object],on:[String,Function,Object],not:Boolean,passThrough:Boolean,field:String},render(n,{props:t,children:e,parent:o,data:r}){const i=t;const a=i.I||i.do;const s=i.of||i.an||i.a||i.this||i.on;if(!a)throw new Error("[Vue Can]: neither `I` nor `do` prop was passed in <Can>");const c=o.$can(a,s,i.field);const u=t.not?!c:c;if(!t.passThrough)return u?e:[];if(!r.scopedSlots||!r.scopedSlots.default)throw new Error("[Vue Can]: `passThrough` expects default scoped slot to be specified");return r.scopedSlots.default({allowed:u,ability:o.$ability})}});const e=new WeakMap;function o(n,t){if(e.has(t))return e.get(t);const o={t:true};const r="function"===typeof n.observable?n.observable(o):new n({data:o});t.on("updated",(()=>{r.t=!r.t}));e.set(t,r);return r}function r(n){if(n)return{value:n};return{get(){throw new Error("Please provide `Ability` instance either in `abilitiesPlugin` or in ComponentOptions")}}}function i(n,t){Object.defineProperty(n.prototype,"$ability",r(t));n.mixin({beforeCreate(){const{ability:n,parent:t}=this.$options;const e=n||(t?t.$ability:null);if(e)Object.defineProperty(this,"$ability",{value:e})},methods:{$can(...t){const e=o(n,this.$ability);e.t=e.t;return this.$ability.can(...t)}}})}export{t as Can,i as abilitiesPlugin};
//# sourceMappingURL=index.mjs.map
